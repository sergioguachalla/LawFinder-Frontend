# This workflow will do a clean install of node dependencies, build the source code, and run tests across different versions of Node.js.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: AUTOMATION - TEST - CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [ 20.x]

  

    steps:

    - shell: cmd
      env:
        VITE_API_URL: ${{ secrets.API_URL_PROD }}
      run: |
        echo "%VITE_API_URL%"


    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        echo "Installing dependencies... 📦"
        npm ci

   

    - name: 'Create env file'
      run: |
        touch .env
        echo "VITE_API_URL={{ secrets.API_URL_PROD}}" > .env
        ls

    - name: Build App
      run: |
        echo "Building app... 🛠️"
        npm run build

    - name: Start web app
      run: |
        echo "Starting web app... 🚀"
        npm run dev &
    - name: Wait for server to be ready
      shell: pwsh
      run: |
        echo "Waiting for the server to be ready... ⏳"
        $attempts = 0
        $maxAttempts = 12  # Wait for up to 60 seconds (12 attempts * 5 seconds)
        $url = 'http://localhost:5173'
        while ($attempts -lt $maxAttempts) {
          try {
            $response = Invoke-WebRequest -Uri $url -UseBasicParsing -TimeoutSec 5
            if ($response.StatusCode -eq 200) {
              Write-Output "Server is ready!"
              break
            }
          } catch {
            Write-Output "Server not ready, retrying in 5 seconds..."
          }
          Start-Sleep -Seconds 5
          $attempts++
        }
        if ($attempts -eq $maxAttempts) {
          Write-Error "Server did not start in time"
          exit 1
        }

    - name: Run tests
      run: |
        echo "Running tests... 🧪"
        npm run test:headless

    - name: Stop web app
      if: success() || failure()
      run: |
        echo "Stopping web app... 🛑"
        pkill -f "npm run dev"

